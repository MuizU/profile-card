# Workflow for building and deploying a Next.js site to GitHub Pages using PNPM
name: Deploy Next.js site to Pages (PNPM)

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1. Setup Node.js - Specify version and tell it to cache using pnpm's lock file
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Or your desired Node.js version
          cache: 'pnpm'     # Use pnpm for caching

      # 2. Setup PNPM - Install the pnpm CLI
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest # Or specify a pnpm version like 9 or 10
          run_install: false # We run install manually below

      # 3. Setup Pages - Configure base path for Next.js static export
      - name: Setup Pages
        id: pages # Give the step an ID to reference its outputs if needed later
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization. Crucial for deploying to subdirectories.
          static_site_generator: next

      # 4. Restore Next.js cache - Speeds up subsequent builds
      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache key whenever pnpm lock file or source files change
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # 5. Install dependencies using PNPM
      - name: Install dependencies
        run: pnpm install

      # 6. Build with Next.js using PNPM - Pass base path if needed
      - name: Build with Next.js
        run: pnpm run build
        env:
          # This environment variable is often used by Next.js for static exports
          # when a basePath is configured. The configure-pages action helps manage this.
          NEXT_PUBLIC_BASE_PATH: ${{ steps.pages.outputs.base_path }}

      # 7. Upload artifact for GitHub Pages deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out # Default output directory for Next.js static export

  # Deployment job - No changes needed here
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
